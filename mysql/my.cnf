[client]
#password	= [your_password]
port		= 3306
socket		= /tmp/mysql.sock

default-character-set=utf8

[mysqld]

port		= 3306
socket		= /tmp/mysql.sock

skip-name-resolve
#datadir = /mnt/db/main
net_buffer_length = 16K
wait_timeout = 60
back_log = 50

max_connections = 40

# Maximum amount of errors allowed per host. If this limit is reached,
# the host will be blocked from connecting to the MySQL server until
# "FLUSH HOSTS" has been run or the server was restarted. Invalid
# passwords and other errors during the connect phase result in
# increasing this value. See the "Aborted_connects" status variable for
# global counter.
max_connect_errors = 10000
table_open_cache = 2048

# Enable external file level locking. Enabled file locking will have a
# negative impact on performance, so only use it in case you have
# multiple database instances running on the same files (note some
# restrictions still apply!) or if you use other software relying on
# locking MyISAM tables on file level.
#external-locking
skip-external-locking

max_allowed_packet = 16M
binlog_cache_size = 1M
max_heap_table_size = 64M
read_buffer_size = 2M
read_rnd_buffer_size = 16M
sort_buffer_size = 8M
join_buffer_size = 8M
thread_cache_size = 8

# You should try [number of CPUs]*(2..4) for thread_concurrency
thread_concurrency = 16
query_cache_size = 64M
query_cache_limit = 2M
ft_min_word_len = 4

# Table type which is used by default when creating new tables, if not
# specified differently during the CREATE TABLE statement.
default-storage-engine=INNODB
thread_stack = 192K
# READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ, SERIALIZABLE
transaction_isolation = REPEATABLE-READ
tmp_table_size = 64M

# *** LOG Specific options ***
# binlog
log-bin=mysql-bin
binlog_format=mixed

# If you're using replication with chained slaves (A->B->C), you need to
# enable this option on server B. It enables logging of updates done by
# the slave thread into the slave's binary log.
#log_slave_updates

expire_logs_days = 14

# general log

# Enable the full query log. Every query (even ones with incorrect
# syntax) that the server receives will be logged. This is useful for
# debugging, it is usually disabled in production use.
# MySQL < 5.1.29 need log
#log
general_log=OFF
general_log_file=mysql-general.log

# error log
log-error=mysql.err
# Print warnings to the error log file.  If you have any problem with
# MySQL you should enable logging of warnings and examine the error log
# for possible explanations. 
#log_warnings

# slow query
slow_query_log
slow_query_log_file=mysql-slow.log
long_query_time=0.1
min_examined_row_limit=10000
#log_output=TABLE

# ***  Replication related settings 
# replication
server-id = 1
replicate-ignore-db=test
replicate-ignore-db=mysql
replicate-ignore-db=performance_schema
replicate-ignore-db=information_schema

# relaylog
# for mha 
#relay_log_purge=0

# Make the slave read-only. Only users with the SUPER privilege and the
# replication slave thread will be able to modify data on it. You can
# use this to ensure that no applications will accidently modify data on
# the slave instead of the master
#read_only

#*** MyISAM Specific options
key_buffer_size = 32M
bulk_insert_buffer_size = 64M
myisam_sort_buffer_size = 128M
myisam_max_sort_file_size = 10G
myisam_repair_threads = 1

myisam_recover

# *** INNODB Specific options ***

innodb_additional_mem_pool_size = 16M
innodb_buffer_pool_size = 512M
innodb_file_per_table
innodb_data_file_path = ibdata1:10M:autoextend

# If you run into InnoDB tablespace corruption, setting this to a nonzero
# value will likely help you to dump your tables. Start from value 1 and
# increase it until you're able to dump the table successfully.
#innodb_force_recovery=1

innodb_thread_concurrency = 24
innodb_flush_log_at_trx_commit = 1

# Speed up InnoDB shutdown. This will disable InnoDB to do a full purge
# and insert buffer merge on shutdown. It may increase shutdown time a
# lot, but InnoDB will have to do it on the next startup instead.
#innodb_fast_shutdown

# The size of the buffer InnoDB uses for buffering log data. As soon as
# it is full, InnoDB will have to flush it to disk. As it is flushed
# once per second anyway, it does not make sense to have it very large
# (even with long transactions). 
innodb_log_buffer_size = 16M
innodb_log_file_size = 256M
innodb_log_files_in_group = 3
innodb_max_dirty_pages_pct = 90

# If data storage is SAN, MySQL recommend to use "O_DSYNC".
innodb_flush_method=O_DIRECT
innodb_lock_wait_timeout = 120

innodb_status_file = 1
innodb-status-file

# MySQL 5.1
# innodb plugin
#
#ignore-builtin-innodb  
#plugin-load=innodb=ha_innodb_plugin.so;innodb_trx=ha_innodb_plugin.so;innodb_locks=ha_innodb_plugin.so;innodb_lock_waits=ha_innodb_plugin.so;innodb_cmp=ha_innodb_plugin.so;innodb_cmp_reset=ha_innodb_plugin.so;innodb_cmpmem=ha_innodb_plugin.so;innodb_cmpmem_reset=ha_innodb_plugin.so 
#innodb_file_io_threads = 10
#innodb_file_format=Barracuda
 
# MySQL >=  5.5
# core x 2
innodb_read_io_threads  = 8
innodb_write_io_threads = 8
innodb_file_format=Barracuda

# MySQL < 5.5
# utf8
#default-character-set=utf8
# MySQL >=  5.5
# utf8
character-set-server=utf8


[mysqldump]
default-character-set=utf8
quick
max_allowed_packet = 16M

[mysql]
no-auto-rehash
[myisamchk]
key_buffer_size = 512M
sort_buffer_size = 512M
read_buffer = 8M
write_buffer = 8M

[mysqlhotcopy]
interactive-timeout

[mysqld_safe]
open-files-limit = 8192
