§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.end-of-line-comment == append ==
# <CURSOR>
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.frame ==
#-------------------------------------------------------------------------------
#  <CURSOR>
#-------------------------------------------------------------------------------
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.function ==
#===  FUNCTION  ================================================================
#         NAME: |?FUNCTION_NAME|
#      PURPOSE: <CURSOR>
#   PARAMETERS: ????
#      RETURNS: ????
#  DESCRIPTION: ????
#       THROWS: no exceptions
#     COMMENTS: none
#     SEE ALSO: n/a
#===============================================================================
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.method ==
#===  CLASS METHOD  ============================================================
#        CLASS: |?CLASSNAME|
#       METHOD: |?METHODNAME|
#   PARAMETERS: ????
#      RETURNS: ????
#  DESCRIPTION: <CURSOR>
#       THROWS: no exceptions
#     COMMENTS: none
#     SEE ALSO: n/a
#===============================================================================
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.file-description-pl == start == noindent ==
#!/usr/bin/env perl 
#===============================================================================
#Last Modified:  2011/12/05.
#===============================================================================
use strict;
use warnings;

use Pod::Usage;
use Getopt::Long qw(:config bundling auto_version);

our $VERSION = "0.01";

main();

sub main {
    my $rh_args = &_init_args('file|f=s');
}

sub _init_args {
    my @args_pattern = @_;
    push @args_pattern, ( 'help|h', 'manual', 'verbose' );

    my %args = (
        # argname => 'default value'
    );
    if ( not GetOptions ( \%args, @args_pattern )) {pod2usage(2); exit 0; }
    if (exists $args{help}) { pod2usage(1); exit 0; }
    elsif (exists $args{manual}) { pod2usage(-exitstatus => 0, -verbose => 2); exit 0;}
    if (exists $args{file})
    {
        if (not -e $args{file})
        {
            print "Can't access file: $args{file}\n";
            exit 1;
        }
    }
#  if (not @ARGV) 
#  {
#    print "You must input args\n";
#    pod2usage(1);
#    exit 1;
#  }
    return \%args;
}
  
1;

__END__

=pod

=head1 NAME

|FILENAME| - Skeleton of Perl Script

=head1 SYNOPSIS

  |FILENAME| [options]

=head1 OPTIONS

=over 8

=item B<--file|-f> filename

set filename

=item B<--help|?>

show help

=item B<--verbose>

verbose mode

=item B<--manual>

show manual

=item B<--version>

show version

=back

=head1 DESCRIPTION

This is skelton of perl script.

=head1 PREREQUISITES

This script requires the C<Getopt::Long>, C<Pod::Usage>

=head1 Author

 |AUTHOR| <|EMAIL|>
  
=cut

§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.file-description-pm == start == noindent ==
#===============================================================================
#Last Modified:  20xx/xx/xx.
#===============================================================================
package |PATH|::|BASENAME|;
use strict;
use warnings;
use Class::Accessor::Lite (
    new => 1,
    rw  => [qw()],
);

our $VERSION = "0.01";

1;

__END__

=pod

=head1 NAME

|PATH|::|BASENAME| - 

=head1 SYNOPSIS

  |FILENAME| 

=head1 DESCRIPTION

=head1 Method

=head2 new

=over 4

=item B<arg>

hoge

=back

=head1 PREREQUISITES

C<Class::Accessor::Lite>

=head1 Author

 |AUTHOR| <|EMAIL|>
  
=cut

§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.file-description-t == start == noindent ==
#/usr/bin/env perl
#===============================================================================
#Last Modified:  2010/09/08.
#===============================================================================
use Test::Most;
use Test::Requires {'File::Which' => 0};

#use Test::More 0.96;
BEGIN{
    use_ok('|BASENAME|');
}

done_testing;

§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.file-description-pod == start ==
#
#===============================================================================
#
#         FILE: |FILENAME|
#
#  DESCRIPTION: <CURSOR>
#
#       AUTHOR: |AUTHOR| (|AUTHORREF|), <|EMAIL|>
#      COMPANY: |COMPANY|
#      CREATED: |DATE|
#     REVISION: ---
#===============================================================================


§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
== comment.keyword-bug == append ==
 # :BUG       :|DATE| |TIME|:|AUTHORREF|: <CURSOR>
== comment.keyword-todo == append ==
 # :TODO      :|DATE| |TIME|:|AUTHORREF|: <CURSOR>
== comment.keyword-warning == append ==
 # :WARNING   :|DATE| |TIME|:|AUTHORREF|: <CURSOR>
== comment.keyword-workaround == append ==
 # :WORKAROUND:|DATE| |TIME|:|AUTHORREF|: <CURSOR>
== comment.keyword-keyword == append ==
 # :|?KEYWORD:u|:|DATE| |TIME|:|AUTHORREF|: <CURSOR>
§%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
