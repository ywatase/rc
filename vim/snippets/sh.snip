 #!/bin/bash
snippet #!
    #!/bin/bash
snippet if
    if [[ ${1:condition} ]]; then
      ${2:#statements}
    fi
snippet elif
    elif [[ ${1:condition} ]]; then
      ${2:#statements}
snippet ifundef
    if [[ "\${${1:var}+set}" ]]; then
      ${2:#statements}
    fi
snippet for
    for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
      ${3:#statements}
    done
snippet forarry
    for (( ${2:i} = 0; $2 < ${#${1:array}[@]}; ++$2 ))
    do
      ${$1[$$2]}
    done
snippet wh
    while [[ ${1:condition} ]]; do
      ${2:#statements}
    done
snippet until
    until [[ ${1:condition} ]]; do
      ${2:#statements}
    done
snippet case
    case ${1:word} in
      ${2:pattern})
        ${3};;
    esac
snippet script_dir
    SCRIPT_DIR=$(cd $(dirname $(readlink -f \$0 || echo \$0)); pwd -P)
snippet app_home
    APP_HOME=$(cd $(dirname $(readlink -f \$0 || echo \$0))/..; pwd -P)
snippet abs_dirname
    abs_dirname() {
      local cwd="$(pwd)"
      local path="\$1"
      while [ -n "$path" ]; do
        cd "${path%/*}"
        local name="${path##*/}"
        path="$(readlink "$name" || true)"
      done
      pwd -P
      cd "$cwd"
    }
    script_dir="$(abs_dirname "\$0")"
snippet debug
    # bashの疑似シグナルDEBUGを用いたデバッグ
    # DEBUG: シェルが文を実行した
    trap 'read -p "\$0($LINENO) $BASH_COMMAND"' DEBUG
    trap - DEBUG
snippet err
    # bashの疑似シグナルERRを用いたエラーハンドリング
    # ERR: コマンド、シェル関数から0ではない終了ステータスが返された
    errtrap() {
      errcode=$?
      echo "error line \$1: command exited with status $errcode."
    }
    trap 'errtrap $LINENO' ERR
snippet exit
    # bashの疑似シグナルEXITを用いた終了処理
    # EXIT: シェルがスクリプトを終了した
    exittrap() {
      # 終了処理
      exitcode=$?
      echo "script exit line: \$1"
    }
    trap 'exittrap $LINENO' EXIT
snippet return
    # bashの疑似シグナルRETURNを用いた割込処理
    # RETURN: source または . で実行されたシェル関数/スクリプトが終了した
    sourcetrap() {
      # 割込処理
      echo "source return line: \$1"
    }
    trap 'sourcetrap $LINENO' RETURN

snippet getopts
    init () {
      while getopts 'Dm:v' opt
      do
        case $opt in
          D) FLAG_DEBUG=1
            ;;
          m) MAILTO=$OPTARG
            ;;
          v) show_version; usage
            ;;
          *) usage
            ;;
        esac
      done
      shift \`expr $OPTIND - 1\`
    }
    usage () {
      /bin/cat <<END
    usage: \`basename \$0\` [-m mail_address] [-v]
      m mail_adderss : send to mail_address
      D              : debug option
      v              : show version
    END
      exit 0
    }
    show_version () {
      echo -e \`basename \$0\` Version: $VERSION
    }
    init "$@"
