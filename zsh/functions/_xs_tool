#compdef xs_tool

typeset -A opt_args
local context state line host

# cache policy
#(Nmw+2)   # 2week
#(Nmh+5)   # 5hour
#(Nms+100) # 100sec
_xs_tool_caching_policy () {
	local -a oldp
	oldp=( "$1"(Nmw+1) ) # 1 week
	(( $#oldp ))
}

_find_or_store_cache () {
	local cache_store var_name
	local -a list
	cache_store=$1
	varname=$2
	getter_function=$3

	local cache_policy
	zstyle -s ":completion:${curcontext}:" cache-policy cache_policy
	if [[ -z "$cache_policy" ]]; then
		zstyle ":completion:${curcontext}:" cache-policy _xs_tool_caching_policy
	fi
	list=(${(P)varname})
    if ( [[ $#list -eq 0 ]] || _cache_invalid $cache_store ) && ! _retrieve_cache $cache_store
    then
		eval $getter_function
		_store_cache $cache_store $varname
	fi
}

_get_host_from_opt_args () {
    (($+opt_args[-h])) && host=$opt_args[-h]
    (($+opt_args[--host])) && host=$opt_args[--host]
}

_get_templates_from_xenserver () {
	_templates=(${(@f)"$(_call_program commands xs_tool list_templates --host=$host 2>/dev/null)"})
}

_get_nw_uuids_from_xenserver () {
	_nw_uuids=(${(@f)"$(_call_program commands xs_tool list_nw_uuids --host=$host 2>/dev/null | awk '{print $1}')"})
}

_get_sr_uuids_from_xenserver () {
	_sr_uuids=(${(@f)"$(_call_program commands xs_tool list_sr_uuids --host=$host 2>/dev/null | awk '{print $1}')"})
}

_get_profiles_from_cobbler () {
	_profiles=(${(@f)"$( _call_program commands xs_tool list_profiles 2>/dev/null )"})
}

_list_templates () {
    local cache_store
	local -a _templates
	_get_host_from_opt_args
	cache_store=XS_TOOL_${host}_tmeplates
	_find_or_store_cache $cache_store '_templates' '_get_templates_from_xenserver'
    compadd "$@" -a _templates
}

_list_nw_uuids () {
	local cache_policy
    local -a _nw_uuids
	_get_host_from_opt_args
	cache_store=XS_TOOL_${host}_nw_uuids
	_find_or_store_cache $cache_store '_nw_uuids' '_get_nw_uuids_from_xenserver'
    compadd "$@" -a _nw_uuids
}
_list_sr_uuids () {
	local cache_policy
    local -a _sr_uuids
	_get_host_from_opt_args
	cache_store=XS_TOOL_${host}_sr_uuids
	_find_or_store_cache $cache_store '_sr_uuids' '_get_sr_uuids_from_xenserver'
    compadd "$@" -a _sr_uuids
}

_list_profiles () {
	local cache_store
	local -a _profiles
	cache_store=XS_TOOL_profiles
	_find_or_store_cache $cache_store '_profiles' '_get_profiles_from_cobbler'
    compadd "$@" -a _profiles
}

_arguments -s -C : \
    '*::commands:->cmds' && return 0 

local -a cmds opts_cobbler opts_xenserver
cmds=( init install list_profiles list_templates list_sr_uuids list_nw_uuids )
opts_xenserver=( '(-h --host)'{-h,--host}'[XenServer host]:XenServer host:_hosts' \
    '(-u --user)'{-u,--user}'[XenServer user]:XenServer user:_users' \
    '(-p --password)'{-p,--password}'[XenServer password]:XenServer password:' )
opts_cobbler=( '(--cobbler_server)--cobbler_server[cobbler server]:cobbler server:' '(--cobbler_port)--cobbler_port[cobbler API port]:cobbler API port:' )

case $state in
    cmds)
        if (( CURRENT == 1 )) ; then
            local -a cmd_all
            cmd_all=(help $cmds)
            _describe -t commands 'xs_tool options' cmd_all && ret=0
        else 
            local -a opts
            case $line[1] in
                help)
                    if (( CURRENT == 2 )) ; then
                        _wanted cmds expl 'xs_tool commands' compadd $cmds && ret=0
                    else 
                        (( ret )) && _message 'no more arguments'
                    fi
                    ;;
                install)
                    opts=("$opts_cobbler[@]" "$opts_xenserver[@]" \
                        '(-p --profile)'{-p,--profile}'[cobbler profile]:cobbler profile name:_list_profiles' \
                        '(-t --template)'{-t,--template}'[template name]:xenserver template name:_list_templates' \
						'(--nw_uuid)--nw_uuid[nw uuid used by kickstart]:xenserver network uuid by kickstart: _list_nw_uuids' \
						'(--sr_uuid)--sr_uuid[sr uuid to install vm]:xenserver sr uuid to install vm: _list_sr_uuids' \
						)
                    ;;
                list_profiles)
                    opts=("$opts_cobbler[@]")
                    ;;
                list_templates | list_nw_uuids | list_sr_uuids)
                    opts=("$opts_xenserver[@]")
                    ;;
                *)
                    (( ret )) && _message 'no more arguments'
                    ;;
            esac
            _arguments -s : "$opts[@]" && ret=0
        fi
        ;;
esac

return ret
